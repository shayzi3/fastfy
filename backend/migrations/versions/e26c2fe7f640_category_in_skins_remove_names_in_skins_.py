"""category in Skins, remove names in Skins and SkinsPriceHistory

Revision ID: e26c2fe7f640
Revises: ad94914f9b5d
Create Date: 2025-06-23 08:41:55.348331

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e26c2fe7f640'
down_revision: Union[str, Sequence[str], None] = 'ad94914f9b5d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('skins', sa.Column('id', sa.BigInteger(), nullable=False))
    op.add_column('skins', sa.Column('name', sa.String(), nullable=False))
    op.add_column('skins', sa.Column('avatar', sa.String(), nullable=False))
    op.add_column('skins', sa.Column('price', sa.Float(), nullable=False))
    op.add_column('skins', sa.Column('category', sa.String(), nullable=True))
    op.add_column('skins', sa.Column('skin_type', sa.String(), nullable=True))
    op.alter_column('skins', 'rarity',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('skins', 'collection',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('idx_item_type'), table_name='skins')
    op.drop_constraint(op.f('skins_skin_id_key'), 'skins', type_='unique')
    op.drop_index(op.f('idx_skin_name'), table_name='skins')
    op.create_index('idx_skin_name', 'skins', ['name'], unique=False)
    op.create_index('idx_category', 'skins', ['category'], unique=False)
    op.create_index('idx_skin_type', 'skins', ['skin_type'], unique=False)
    op.create_unique_constraint(None, 'skins', ['id'])
    op.drop_column('skins', 'item_type')
    op.drop_column('skins', 'skin_avatar')
    op.drop_column('skins', 'skin_id')
    op.drop_column('skins', 'skin_name')
    op.drop_column('skins', 'skin_price')
    op.add_column('skins_price_history', sa.Column('id', sa.BigInteger(), nullable=False))
    op.add_column('skins_price_history', sa.Column('name', sa.String(), nullable=False))
    op.drop_constraint(op.f('skins_price_history_skin_id_key'), 'skins_price_history', type_='unique')
    op.drop_index(op.f('idx_skin_history_name'), table_name='skins_price_history')
    op.create_index('idx_skin_history_name', 'skins_price_history', ['name'], unique=False)
    op.create_unique_constraint(None, 'skins_price_history', ['id'])
    op.drop_column('skins_price_history', 'skin_id')
    op.drop_column('skins_price_history', 'skin_name')
    op.create_unique_constraint(None, 'users_portfolio', ['item_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users_portfolio', type_='unique')
    op.add_column('skins_price_history', sa.Column('skin_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('skins_price_history', sa.Column('skin_id', sa.BIGINT(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'skins_price_history', type_='unique')
    op.drop_index('idx_skin_history_name', table_name='skins_price_history')
    op.create_index(op.f('idx_skin_history_name'), 'skins_price_history', ['skin_name'], unique=False)
    op.create_unique_constraint(op.f('skins_price_history_skin_id_key'), 'skins_price_history', ['skin_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('skins_price_history', 'name')
    op.drop_column('skins_price_history', 'id')
    op.add_column('skins', sa.Column('skin_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('skins', sa.Column('skin_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('skins', sa.Column('skin_id', sa.BIGINT(), autoincrement=True, nullable=False))
    op.add_column('skins', sa.Column('skin_avatar', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('skins', sa.Column('item_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'skins', type_='unique')
    op.drop_index('idx_skin_type', table_name='skins')
    op.drop_index('idx_category', table_name='skins')
    op.drop_index('idx_skin_name', table_name='skins')
    op.create_index(op.f('idx_skin_name'), 'skins', ['skin_name'], unique=False)
    op.create_unique_constraint(op.f('skins_skin_id_key'), 'skins', ['skin_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_item_type'), 'skins', ['item_type'], unique=False)
    op.alter_column('skins', 'collection',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('skins', 'rarity',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('skins', 'skin_type')
    op.drop_column('skins', 'category')
    op.drop_column('skins', 'price')
    op.drop_column('skins', 'avatar')
    op.drop_column('skins', 'name')
    op.drop_column('skins', 'id')
    # ### end Alembic commands ###
