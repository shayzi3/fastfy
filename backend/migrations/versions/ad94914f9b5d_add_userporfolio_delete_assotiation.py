"""add UserPorfolio, delete assotiation

Revision ID: ad94914f9b5d
Revises: 398c1c883c70
Create Date: 2025-06-22 14:31:59.079657

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ad94914f9b5d'
down_revision: Union[str, Sequence[str], None] = '398c1c883c70'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_portfolio',
    sa.Column('item_id', sa.BigInteger(), nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=False),
    sa.Column('skin_id', sa.BigInteger(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('buy_price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('item_id')
    )
    op.create_index('idx_portfolio_skin_id', 'users_portfolio', ['skin_id'], unique=False)
    op.create_index('idx_portfolio_user_uuid', 'users_portfolio', ['user_uuid'], unique=False)
    op.drop_table('assotiation')
    op.create_unique_constraint(None, 'skins', ['skin_id'])
    op.create_unique_constraint(None, 'skins_price_history', ['skin_id'])
    op.create_unique_constraint(None, 'users', ['uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'skins_price_history', type_='unique')
    op.drop_constraint(None, 'skins', type_='unique')
    op.create_table('assotiation',
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['skins.skin_id'], name='assotiation_id_fkey'),
    sa.ForeignKeyConstraint(['uuid'], ['users.uuid'], name='assotiation_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', 'id', name='assotiation_pkey'),
    sa.UniqueConstraint('id', name='assotiation_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('uuid', name='assotiation_uuid_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_index('idx_portfolio_user_uuid', table_name='users_portfolio')
    op.drop_index('idx_portfolio_skin_id', table_name='users_portfolio')
    op.drop_table('users_portfolio')
    # ### end Alembic commands ###
